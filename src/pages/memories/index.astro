---
import Layout from "@layouts/Layout.astro"
import { default_assets, site, memories as m_config } from "src/config";
import { getCollection } from "astro:content";
import { generateOpenGraph } from "src/tools/open_graph";
import Content from "@components/content/Content.astro"
import '@styles/article.css'

import SvgDate from '@components/Svg/Date.astro'
import { formatDateTime } from "@/tools/tools";

const memories = (await getCollection("memories")).sort((a, b) => {
    return b.data.date.getTime() - a.data.date.getTime();
}).splice(0, m_config.show_limit);

// TODO: 随机一篇

const page_meta = {
	title: '与昨日书 | ' + site.name,
	description: site.author + '的记忆碎片',
	keywords: '记忆碎片,博客',
	cover: default_assets.cover
}

const meta_og = generateOpenGraph(Astro, page_meta)
---

<Layout 
page_meta={page_meta}
meta_og={meta_og}>
<h1 slot="header">与昨日书</h1>
<section id="memories-container">
    {
        memories.map(async (memory) => {
            return (
                <article class="article-block">
                    <h2 class="title">{memory.data.title}</h2>
                    
                    <Content entry={memory}></Content>
                    <div class="meta">
                        <span class="emoji">{memory.data.emoji}</span>
                        <time><SvgDate/><span>{formatDateTime(memory.data.date)}</span></time>
                        <span class="tags">
                            {
                                memory.data.tags?.map((tag) => {
                                    return (
                                        <span class="tag">{tag}</span>
                                    )
                                })
                            }
                        </span>
                    </div>
                </article>
            )
        })
    }
</section>
</Layout>

<style>
#memories-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    border-radius: var(--base-radius);
}
#memories-container .article-block {
    margin: 0;
    padding: 1rem 1rem 0;
}
#memories-container .article-block .title {
    font-size: 1.15rem;
    margin: 0.5rem 0 1rem;
}
#memories-container .article-block .meta {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    font-size: 0.8rem;
    padding: 1rem 0;
    border-top: 1px solid var(--card-border-color);
    margin-top: 1rem;
    gap: 0.5em;
}
#memories-container .article-block .meta .emoji {
    border-radius: var(--base-radius);
    background: var(--card-inner-bg);
    border: 1px solid var(--card-border-color);
    padding: 0.2rem 0.8rem;
}
#memories-container .article-block .meta time {
    padding: 0.2rem 0.8rem;
    border-radius: var(--base-radius);
    background: var(--card-inner-bg);
    border: 1px solid var(--card-border-color);
    display: flex;
    gap: 0.4em;
    align-items: center;
}
#memories-container .article-block .meta .tags {
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
    font-weight: bold;
}
#memories-container .article-block .meta .tags .tag {
    padding: 0.2rem 0.8rem;
    border-radius: var(--base-radius);
    background: rgba(var(--main-color-meta), 0.2);
    color: rgba(var(--main-color-meta), 0.8);
    border: 1px solid rgba(var(--main-color-meta), 0.4);
}
</style>