---
import IakImg from "../Iak/Img.astro";
const {
  name,
  author = "",
  cover,
  description = "",
  link,
  link_text = "GO",
  comment = "",
  color,
} = Astro.props;
---

<div
  class="md-linkcard md-block"
  style={color ? `--main-color-meta: var(--${color}-meta)` : ""}
  data-role="md-linkcard"
>
  <div class="md-linkcard__info">
    {cover ? <IakImg className="md-linkcard__cover" src={cover} /> : null}
    <div class="md-linkcard__other">
      <div class="md-linkcard__name">{name}</div>
      {author ? <div class="md-linkcard__author">{author}</div> : null}
      {
        description ? (
          <div class="md-linkcard__description">{description}</div>
        ) : null
      }
      {
        link ? (
          <a class="md-linkcard__link" href={link} target="_blank">
            {link_text}
          </a>
        ) : null
      }
    </div>
  </div>
  {comment ? <div class="md-linkcard__comment">『 {comment} 』</div> : null}
</div>

<script>
  // @ts-ignore
  window.iak.contextMenu["md-linkcard"] = {
    type: "line",
    children: [
      {
        text: "新标签打开",
        icon: "fas fa-link",
        tag: "链接",
        action(el: HTMLElement) {
          const link = el.querySelector(
            ".md-linkcard__link"
          ) as HTMLAnchorElement;
          if (link) {
            window.open(link.href);
          }
        },
      },
    ],
  };
</script>

<style>
  .md-linkcard {
    --main-color: rgba(var(--main-color-meta), 1);
    width: 100%;
    height: fit-content;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border-radius: var(--base-radius);
    background-color: var(--card-bg);
    transition: all 0.3s ease;
    overflow: hidden;
    color: var(--main-color);
  }
  .md-linkcard:only-child {
    margin: 0 auto;
  }
  .md-linkcard .md-linkcard__info {
    width: 100%;
    padding: 1.5rem;
    display: flex;
    align-items: center;
    gap: 1rem;
    background-color: rgba(var(--main-color-meta), 0.15);
  }
  .md-linkcard :global(.md-linkcard__cover) {
    max-height: 150px;
    max-width: 50%;
    border-radius: 2px;
  }
  .md-linkcard .md-linkcard__other {
    display: flex;
    flex-direction: column;
    gap: 0.1rem;
    overflow: hidden;
  }
  .md-linkcard .md-linkcard__name {
    font-weight: bold;
    line-height: 2;
    font-size: 1.15em;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
  }
  .md-linkcard .md-linkcard__description {
    line-height: 1.25;
    font-size: 0.8em;
    opacity: 0.6;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
  }
  .md-linkcard .md-linkcard__link {
    display: inline-block;
    padding: 0 1rem;
    margin-top: 0.5em;
    width: fit-content;
    line-height: 1.8;
    border-radius: var(--base-radius);
    background-color: var(--main-color);
    color: white;
    transition: all 0.3s ease;
  }
  .md-linkcard .md-linkcard__link:hover {
    opacity: 0.6;
  }
  .md-linkcard .md-linkcard__link:focus-visible {
    outline: none;
  }
  .md-linkcard:has(.md-linkcard__link:focus-visible) {
    outline: none;
    box-shadow: 0 0 0 4px rgba(var(--main-color-meta), 0.5);
  }
  .md-linkcard .md-linkcard__comment {
    width: 100%;
    padding: 1.5rem;
    background-color: rgba(var(--main-color-meta), 0.25);
  }
  :global(.dark .md-linkcard) {
    color: rgba(var(--main-color-meta), 0.7);
  }
  :global(.dark .md-linkcard .md-linkcard__info) {
    background-color: rgba(var(--main-color-meta), 0.07);
  }
  :global(.dark .md-linkcard .md-linkcard__comment) {
    background-color: rgba(var(--main-color-meta), 0.15);
  }
  :global(.dark .md-linkcard .md-linkcard__link) {
    background-color: rgba(var(--main-color-meta), 0.7);
  }
</style>
