---
// wave\grid\circle\star\cell\twill\hotpoint
const {type="grid"} = Astro.props;
---

<div class={`header-bg ${type}`}><slot></slot></div>

<style>
  .header-bg {
    position: absolute;
    width: 100%;
    height: 100%;
    --bg-color: rgba(255, 255, 255, 0.1);
    background-attachment: fixed;
    background-size: 100% 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  .header-bg.wave {
    background-image: url(/bg-zigzag.svg);
    animation: 60s linear -30s infinite alternate none running background-slide;
    background-size: 1500px;
    line-height: 1.5;
    transition: background 0.3s;
  }
  /* 格子纹|双条纹 */
  .header-bg.cell {
    --base: 40px;
    background-image: repeating-linear-gradient(
        0deg,
        var(--bg-color) 0,
        var(--bg-color) var(--base),
        transparent var(--base),
        transparent calc(var(--base) * 2)
      ),
      repeating-linear-gradient(
        90deg,
        var(--bg-color) 0,
        var(--bg-color) var(--base),
        transparent var(--base),
        transparent calc(var(--base) * 2)
      );
  }
  .header-bg.hotpoint {
    --step: 15%;
    background-image: radial-gradient(
        circle at bottom center,
        var(--bg-color) 0,
        var(--bg-color) var(--step),
        transparent var(--step),
        transparent 100%
      ),
      radial-gradient(
        circle at bottom center,
        var(--bg-color) 0,
        var(--bg-color) calc(var(--step) * 2),
        transparent calc(var(--step) * 2),
        transparent 100%
      ),
      radial-gradient(
        circle at bottom center,
        var(--bg-color) 0,
        var(--bg-color) calc(var(--step) * 3),
        transparent calc(var(--step) * 3),
        transparent 100%
      ),
      radial-gradient(
        circle at bottom center,
        var(--bg-color) 0,
        var(--bg-color) calc(var(--step) * 4),
        transparent calc(var(--step) * 4),
        transparent 100%
      );
  }

  /* 斜纹 twill */
  .header-bg.twill {
    --size: 80px;
    --deg1: 30deg;
    --deg2: -30deg;
    background-image: repeating-linear-gradient(
      var(--deg1),
      var(--bg-color) 0,
      var(--bg-color) var(--size),
      transparent var(--size),
      transparent calc(var(--size) * 2)
    ),repeating-linear-gradient(
      var(--deg2),
      var(--bg-color) 0,
      var(--bg-color) var(--size),
      transparent var(--size),
      transparent calc(var(--size) * 2)
    );
  }

  /* 四分 */
  .header-bg.quarter {
    background-image: linear-gradient(
        0deg,
        var(--bg-color) 0,
        var(--bg-color) 50%,
        transparent 50%,
        transparent 100%
      ),
      linear-gradient(
        90deg,
        var(--bg-color) 0,
        var(--bg-color) 50%,
        transparent 50%,
        transparent 100%
      );
  }
  /* 细格子 */

  .header-bg.grid {
    --base: 30px;
    --line: 1px;
    background-image: repeating-linear-gradient(
        90deg,
        var(--bg-color) 0,
        var(--bg-color) var(--line),
        transparent var(--line),
        transparent var(--base)
      ),
      repeating-linear-gradient(
        var(--bg-color) 0,
        var(--bg-color) var(--line),
        transparent var(--line),
        transparent var(--base)
      );
  }
  /* 圆心 */
  .header-bg.circle {
    --base: 80px;
    background-image: repeating-radial-gradient(
      circle,
      var(--bg-color) 0,
      var(--bg-color) calc(var(--base) / 2),
      transparent calc(var(--base) / 2),
      transparent var(--base)
    );
  }

  .header-bg.star {
    --size: 6px;
    background-image: repeating-radial-gradient(
      var(--bg-color) 0,
      var(--bg-color) var(--size),
      transparent var(--size),
      transparent calc(4 * var(--size)),
      var(--bg-color) calc(4 * var(--size)),
      var(--bg-color) calc(5 * var(--size))
    );
    background-size: calc(var(--size) * 7.5) calc(var(--size) * 7.5);
  }
</style>
